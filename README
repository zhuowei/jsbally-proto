JSSpeccy: A ZX Spectrum emulator in pure Javascript
===================================================
by Matt Westcott <matt@west.co.tt>

- A Spectrum emulator? In Javascript?
Yes.

- Why?
As a birthday gift to Princess Ragnhild of Norway.

- Really?
No.

Features
--------
* 48K Spectrum emulation
* Most documented and undocumented Z80 behaviour
* A screen with a border
* Keyboard scanning
* SNA snapshot loading
* Erm...

Notable non-features (don't hold your breath):
----------------------------------------------
* 128K (and later models)
* Sound
* Tapes (or any other file formats besides SNA)
* ULA effects (multicolour / contention)
* TV dot crawl
* Your mum shouting that your tea's ready

Requirements
------------
Any browser supporting the <canvas> element (which include Firefox, Opera,
Chrome and Safari) should work. Browsers supporting the putImageData method
(which include Firefox and Opera) will be somewhat faster. Internet Explorer
should also work, but I have no idea about performance.

Instructions
------------
Open jsspeccy.html. Click on 'run'. Double click on a snapshot filename.

Build instructions (aka 'how to add more games')
------------------------------------------------
Unfortunately there's no way to open user-supplied binary files from within a
Javascript application (although it looks like Google Gears is inching towards
having that capability sooner or later), so they have to be compiled in. Put
your .SNA files in the 'snapshots' directory, then run 'make'. This will compile
them into the file snapshots.js (as well as doing some other stuff: compiling
roms into roms.js, and rebuilding the Z80 core from bits of perl and
C preprocessor and bits of string). You need Make and Perl for this.

Acknowledgements
----------------
The Z80 core and unit tests were ported from Fuse:
	http://fuse-emulator.sourceforge.net/
Internet Explorer support is provided by ExplorerCanvas:
  http://excanvas.sourceforge.net/

                                  Matt Westcott 2008-10-19
                                  http://matt.west.co.tt/
